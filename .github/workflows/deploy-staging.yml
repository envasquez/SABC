name: Deploy to Staging

# Trigger on pushes to staging branch
on:
  push:
    branches: [ staging ]

jobs:
  # Run quality checks before deployment
  validate:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-ci.txt
        pip install bandit

    - name: Run linting checks
      run: |
        echo "üîç Running code quality checks..."
        ruff check . --output-format=github

    - name: Run type checking
      run: |
        mypy . --ignore-missing-imports --no-strict-optional

    - name: Run security scan
      run: |
        bandit -r . -ll --exclude=./tests,./htmlcov,./.pytest_cache

    - name: Run tests with coverage
      run: |
        pytest tests/ -v --tb=short --cov=. --cov-report=term-missing --cov-fail-under=40

  # Note: Actual deployment happens automatically in Digital Ocean
  # when code is pushed to staging branch (if auto-deploy is enabled)
  #
  # This workflow validates the code before Digital Ocean pulls it

  notify-deployment:
    runs-on: ubuntu-latest
    needs: [validate]
    if: success()

    steps:
    - name: Deployment notification
      run: |
        echo "‚úÖ Code validation passed!"
        echo ""
        echo "üöÄ Digital Ocean will automatically deploy to staging:"
        echo "   - App: sabc-staging"
        echo "   - Branch: staging"
        echo "   - URL: https://staging.sabc.example.com"
        echo ""
        echo "üìä Monitor deployment:"
        echo "   https://cloud.digitalocean.com/apps"
        echo ""
        echo "üîç Next steps:"
        echo "   1. Monitor deployment in Digital Ocean dashboard"
        echo "   2. Check application logs for errors"
        echo "   3. Run manual tests on staging URL"
        echo "   4. Verify database migrations applied correctly"
        echo "   5. Test new features end-to-end"
        echo ""
        echo "‚ú® Once staging tests pass, merge to master for production"

  notify-failure:
    runs-on: ubuntu-latest
    needs: [validate]
    if: failure()

    steps:
    - name: Failure notification
      run: |
        echo "‚ùå Staging deployment validation FAILED!"
        echo ""
        echo "‚ö†Ô∏è  Digital Ocean deployment may still proceed,"
        echo "   but the code has quality issues."
        echo ""
        echo "üîß Action required:"
        echo "   1. Check the failed job above"
        echo "   2. Fix the issues locally"
        echo "   3. Push fixes to staging branch"
        echo ""
        echo "üí° Run locally before pushing:"
        echo "   nix develop -c check-code"
        echo "   nix develop -c run-tests"
        exit 1
