[tool.ruff]
line-length = 100
exclude = ["app_routes.py"]

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N"]
ignore = [
    "F403",  # Star imports (intentional for minimal code)
    "F405",  # May be undefined from star imports
    "E722",  # Bare except (minimal error handling)
    "E501",  # Line too long (SQL queries)
]

[tool.ruff.lint.per-file-ignores]
"app.py" = ["E402"]  # Module level imports after setup - correct pattern for FastAPI
"routes/pages/home.py" = ["N806"]  # SQLAlchemy aliased tables (Angler1, Angler2, Author, Editor) - correct pattern

[tool.mypy]
ignore_missing_imports = true
warn_return_any = false
warn_unused_ignores = false
# Disable specific error codes to maintain minimal complexity approach
# These can be enabled incrementally as code quality improves:
#   - union-attr: Union attribute access (FastAPI form data)
#   - assignment: Type compatibility in assignments
#   - var-annotated: Variable type annotations
#   - index: Indexing operations
#   - attr-defined: Attribute existence checks
#   - arg-type: Function argument types
#   - return-value: Return type compatibility
#   - call-arg: Function call arguments
#   - call-overload: Overloaded function calls
disable_error_code = ["union-attr", "assignment", "var-annotated", "index", "attr-defined", "arg-type", "return-value", "call-arg", "call-overload"]
# Exclude scripts directory to avoid module conflicts
exclude = ["scripts/"]
# Type check all Python files
